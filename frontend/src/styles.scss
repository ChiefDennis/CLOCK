// ------------------------------
// 1. Angular Material Import
// ------------------------------
@use '@angular/material' as mat;

// ------------------------------
// 2. Main Theme Definition
// ------------------------------
// As per the documentation, we define the theme once at a high level (e.g., html).
// This mixin generates all the necessary CSS variables (--mat-sys-*) for color,
// typography, and density.
html {
  // 'color-scheme' tells the browser which modes this element supports.
  // Using 'light dark' allows the browser to pick the theme based on the user's OS preference.
  color-scheme: light dark;

  @include mat.theme((
    color: (
      // A color map allows specifying different palettes for primary and tertiary roles.
      primary: mat.$cyan-palette,
      tertiary: mat.$orange-palette
    ),
    // A single font family name can be provided for typography.
    typography: Roboto,
    // Density is set to the default (0).
    density: 0
  ));
}

// ------------------------------
// 3. Optional Manual Theme Toggling
// ------------------------------
// You can create classes to manually override the OS preference.
// Applying '.dark-theme' to the body or html tag will force dark mode.
.dark-theme {
  color-scheme: dark;
}

.light-theme {
  color-scheme: light;
}


// ------------------------------
// 4. Global & Component Styles (Using CSS Variables)
// ------------------------------

// --- HTML & Body ---
// It's best practice to apply the theme's surface and text colors to the body.
html, body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Inter, system-ui, -apple-system, "Segoe UI", Roboto, Arial, Helvetica, Ubuntu,
    "Apple Color Emoji", "Segoe UI Emoji", sans-serif;
  // Use the CSS variables generated by mat.theme for background and text color.
  background: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  transition: background-color 0.3s, color 0.3s;
}

// --- Links & Buttons ---
a {
  color: var(--mat-sys-primary); // Use primary color for links
  text-decoration: none;
}
button {
  cursor: pointer;
}

.btn {
  border: 1px solid var(--mat-sys-outline);
  border-radius: 12px;
  padding: 10px 16px;
  background: transparent;
  color: var(--mat-sys-on-surface);
}

.btn-primary {
  @extend .btn;
  border-color: transparent;
  background: var(--mat-sys-primary);
  color: var(--mat-sys-on-primary);
}

.btn-ghost {
  @extend .btn;
  border-color: var(--mat-sys-outline);
}

// --- Layout ---
.layout {
  display: grid;
  grid-template-columns: 160px 1fr;
  grid-template-rows: 64px 1fr;
  height: 100vh;
}

.sidenav, .topbar {
  background: var(--mat-sys-surface-container);
  border-color: var(--mat-sys-outline-variant);
}

.sidenav {
  grid-row: 1/3;
  border-right-style: solid;
  border-right-width: 1px;
  padding: 8px;
}

.topbar {
  grid-column: 2;
  border-bottom-style: solid;
  border-bottom-width: 1px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 16px;
  height: 64px;

  > div:first-child {
    font-size: 1.25rem;
    font-weight: 700;
    line-height: 64px;
  }
}

.content {
  grid-column: 2;
  overflow: auto;
  padding: 24px;
}

// --- Navigation ---
.nav-item {
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 10px 12px;
  border-radius: 10px;
  margin: 4px 6px;
  color: var(--mat-sys-on-surface-variant);
}

.nav-item.active {
  background: var(--mat-sys-primary-container);
  color: var(--mat-sys-on-primary-container);
}

// --- Brand & Search ---
.brand {
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 12px 10px;
  font-weight: 700;
}

.search {
  background: var(--mat-sys-surface-container-high);
  border: 1px solid var(--mat-sys-outline);
  border-radius: 12px;
  padding: 10px 12px;
  min-width: 260px;
}

// --- Cards & Login ---
.card, .login-card {
  box-sizing: border-box;
}

.card {
  background: var(--mat-sys-surface-container-low);
  border: 1px solid var(--mat-sys-outline-variant);
  border-radius: 16px;
  padding: 16px;
}

.card-header {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  /* This is the key property that adds space below the buttons */
  margin-bottom: 1rem; /* 16px */
}

.login-page {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background: var(--mat-sys-surface);
}

.login-card {
  background: var(--mat-sys-surface-container);
  border: 2px solid var(--mat-sys-primary);
  border-radius: 24px;
  padding: 28px;
  min-width: 340px;
  max-width: 420px;
}

// --- Inputs & Selects ---
input, textarea, select, .table-input, .table-select {
  width: 100%;
  box-sizing: border-box;
  padding: 6px 12px;
  border-radius: 8px;
  border: 1px solid var(--mat-sys-outline);
  background: var(--mat-sys-surface-container-highest);
  color: var(--mat-sys-on-surface);
  font-family: inherit;
  font-size: 1rem;
}

input:focus, textarea:focus, select:focus {
  outline: 2px solid var(--mat-sys-primary);
  border-color: var(--mat-sys-primary);
}

// --- Table ---
.table-container {
  width: 100%;
  overflow-x: auto;
  margin-top: 16px;
  background: var(--mat-sys-surface-container-lowest); // e.g., white in light mode
  border-radius: 12px;
  border: 1px solid var(--mat-sys-outline-variant);
  overflow: hidden;

  table {
    width: 100%;
    border-collapse: collapse;
    background: transparent;

    th.mat-header-cell {
      background: var(--mat-sys-surface-container);
      color: var(--mat-sys-on-surface-variant);
      font-weight: 600;
      padding: 12px;
    }

    td.mat-cell {
      padding: 12px;
      border-bottom: 1px solid var(--mat-sys-outline-variant);
      color: var(--mat-sys-on-surface);
    }

    tr.mat-row:last-child td.mat-cell {
      border-bottom: none;
    }

    // Use theme variables for row colors
    tr.mat-row:hover { background: var(--mat-sys-surface-container-high); }
    tr.mat-row:nth-child(even) { background: var(--mat-sys-surface-container); }
    tr.mat-row:nth-child(odd) { background: var(--mat-sys-surface-container-lowest); }
    tr.mat-header-row { border-bottom: 2px solid var(--mat-sys-primary); }
  }

  mat-paginator {
    background: var(--mat-sys-surface-container-lowest);
    color: var(--mat-sys-on-surface);
    border-top: 1px solid var(--mat-sys-outline-variant);
  }
}

// Snackbar

// For the success snackbar
.success-snackbar {
  background: var(--mat-sys-primary);
  color: var(--mat-sys-on-primary);

  .mdc-button__label {
    color: var(--mat-sys-on-primary);
  }
}

.error-snackbar {
  background: var(--mat-sys-error);
  color: var(--mat-sys-on-error);

  .mdc-button__label {
    color: var(--mat-sys-on-error);
  }
}

// Dialog backdrop and outline colors.

.warn-dialog-outline .mat-mdc-dialog-container .mdc-dialog__surface {
  border: 2px solid var(--mat-sys-primary);
}

.dialog-backdrop-blur {
  backdrop-filter: blur(4px);
  background-color: rgba(0, 0, 0, 0.35); // A darker overlay improves the blur effect
}

// High Severity Dialog Outline
.alarm-dialog-high .mat-mdc-dialog-container .mdc-dialog__surface {
  border: 2px solid #f44336; // Red
}

// Medium Severity Dialog Outline
.alarm-dialog-medium .mat-mdc-dialog-container .mdc-dialog__surface {
  border: 2px solid #ff9800; // Orange
}

// Low Severity Dialog Outline
.alarm-dialog-low .mat-mdc-dialog-container .mdc-dialog__surface {
  border: 2px solid #2196f3; // Blue
}

// Info Severity Dialog Outline
.alarm-dialog-info .mat-mdc-dialog-container .mdc-dialog__surface {
  border: 2px solid #9e9e9e; // Grey
}

/*
  This selector is highly specific:
  It targets a mat-form-field with our class .table-form-field,
  but only when it's a direct child of a mat-cell, which itself is
  inside a mat-row in a mat-table.
*/
.mat-mdc-table .mat-mdc-row .mat-mdc-cell > .table-form-field {
  
  /* This removes the extra space underneath for hints and errors */
  .mat-mdc-form-field-subscript-wrapper {
    display: none;
  }

  /* This is the main container for the form field */
  .mat-mdc-form-field-flex {
    height: 36px !important;

    /* Use flexbox to vertically center the content */
    align-items: center; 
  }
}